{"version":3,"file":"static/js/850.84dcd8fb.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const ContactsListItemStyled = styled.li`\n    display: flex;\n    margin: 5px;\n    padding: 5px;\n`;\n\nexport const ContactName = styled.div`\n    margin-right: 10px;\n`;\n\nexport const ButtonDelete = styled.button`\n    font-weight: bold;\n    margin-left: auto;\n    border: 1px solid;\n    border-radius: 5px;\n    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n`;\n\nexport const ButtonEdit = styled.button`\n    font-weight: bold;\n    margin-left: auto;\n    border: 1px solid;\n    border-radius: 5px;\n    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n`;\n","import { useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { ContactsListItemStyled, ContactName, ButtonDelete, ButtonEdit } from './ContactListItem.styled';\nimport { deleteContact, updateContact } from \"../../redux/contacts/operations\";\n\nconst ContactListItem = ({ contactId, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contactId));\n  const handleEdit = () => dispatch(updateContact(contactId));\n\n  return (\n    <ContactsListItemStyled>\n      <ContactName>\n        {name}: {number}\n      </ContactName>\n      <ButtonEdit type=\"button\" aria-label=\"edit\" onClick={handleEdit}>\n        Edit\n      </ButtonEdit>\n      <ButtonDelete type=\"button\" aria-label=\"delete\" onClick={handleDelete}>\n        Delete\n      </ButtonDelete>\n    </ContactsListItemStyled>\n  );\n};\n\nContactListItem.propTypes = {\n  contactId: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactListItem;\n","import styled from '@emotion/styled';\n\nexport const ContactListStyled = styled.ul`\n    margin: 5px;\n    padding: 5px;\n`;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from '../../redux/contacts/operations'\nimport { selectContacts, selectIsLoading, selectError, selectFilter } from \"../../redux/contacts/selectors\";\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport { ContactListStyled } from './ContactList.styled';\nimport Loader from '../Loader/Loader';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilter);\n\n  // Отримуємо частини стану\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  // Викликаємо операцію\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n  return (\n    <ContactListStyled>\n      {isLoading && <Loader />}\n      {error && <p>{\"Oops, mistake... Please try again\"}</p>}\n      {contacts.filter(contact => \n        contact.name.toLowerCase().includes(filteredContacts.toLowerCase()))\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n         >\n        </ContactListItem>\n      ))}\n    </ContactListStyled>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  padding: 15px;\n  gap: 20px;\n  width: 400px;\n  // box-sizing: border-box;\n  border: 1px solid;\n  border-radius: 5px;\n  font-weight: bold;\n`;\n\nexport const ButtonAdd = styled.button`\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  cursor: pointer;\n  width: 150px;\n  margin: 0 auto;\n  padding: 10px;\n  color: #000000;\n  border: 1px solid;\n  border-radius: 5px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/operations\";\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { Form, ButtonAdd } from './ContactForm.styled';\n\nconst ContactForm = () => {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const { name, number } = event.currentTarget;\n\n        const isContactExist = contacts.some(\n            contact => contact.name.toLowerCase() === name.value.toLowerCase()\n        );\n        \n        if (isContactExist) {\n            alert(`${name.value} is already in contacts`);\n            event.currentTarget.reset();\n            return;\n        }\n\n        dispatch(addContact({name: name.value, number: number.value}));\n        event.currentTarget.reset();\n      };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <label htmlFor=\"name\">\n                Name: \n            </label>\n            <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Z\\s]+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\" required\n            id=\"name\"\n            />\n\n            <label htmlFor=\"number\">\n                Number: \n            </label>\n            <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"^[0-9]+$\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\" required\n            id=\"number\"\n            />  \n\n            <ButtonAdd type='submit' aria-label=\"Add contact\">Add contact</ButtonAdd>          \n        </Form>\n    )\n}\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from '../components/ContactList/ContactList';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectIsLoading } from '../redux/contacts/selectors';\nimport Loader from '../components/Loader/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      {isLoading && <Loader />}\n      <ContactList />\n    </>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactsListItemStyled","styled","ContactName","ButtonDelete","ButtonEdit","contactId","name","number","dispatch","useDispatch","type","onClick","updateContact","deleteContact","ContactListStyled","useSelector","filteredContacts","useEffect","fetchContacts","Loader","contact","toLowerCase","includes","sort","a","b","localeCompare","map","id","Form","ButtonAdd","onSubmit","event","preventDefault","currentTarget","some","value","alert","reset","addContact","htmlFor","pattern","title","required","Helmet"],"sourceRoot":""}